name: Deploy Next.js to GitHub Pages
on:
  push:
    branches:
      - main
  schedule:
    # Run nightly builds at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write  # Changed from read to write for auto-commit functionality
  pages: write
  id-token: write
jobs:
  # Lint job
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      # Improved caching for node_modules and .next/cache
      - name: Cache node modules and .next build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-nextjs-
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm ci
      
      # Auto-commit lockfile step after dependency updates
      - name: Auto-commit package-lock.json changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package-lock.json
          git diff --staged --quiet || git commit -m "chore: update package-lock.json [skip ci]"
          git push || true
      
      - name: Run linter
        run: npm run lint
  # Type check job
  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      # Improved caching for node_modules and .next/cache
      - name: Cache node modules and .next build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-nextjs-
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm ci
      
      # Auto-commit lockfile step after dependency updates
      - name: Auto-commit package-lock.json changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package-lock.json
          git diff --staged --quiet || git commit -m "chore: update package-lock.json [skip ci]"
          git push || true
      
      - name: Run type check
        run: npm run type-check
  # Test job
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      # Improved caching for node_modules and .next/cache
      - name: Cache node modules and .next build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-nextjs-
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm ci
      
      # Auto-commit lockfile step after dependency updates
      - name: Auto-commit package-lock.json changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package-lock.json
          git diff --staged --quiet || git commit -m "chore: update package-lock.json [skip ci]"
          git push || true
      
      - name: Run tests
        run: npm test
  # Build job - depends on lint, typecheck, and test
  build:
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test]
    outputs:
      # Confirm static export and output directory
      static-export: ${{ steps.export-check.outputs.static-export }}
      output-dir: ${{ steps.export-check.outputs.output-dir }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      # Improved caching for node_modules and .next/cache
      - name: Cache node modules and .next build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-nextjs-
            ${{ runner.os }}-node-
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Install dependencies
        run: npm ci
      
      # Auto-commit lockfile step after dependency updates
      - name: Auto-commit package-lock.json changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package-lock.json
          git diff --staged --quiet || git commit -m "chore: update package-lock.json [skip ci]"
          git push || true
      
      - name: Check UI component files
        run: |
          chmod +x ./ci-debug-file-check.sh
          ./ci-debug-file-check.sh
      
      - name: Build Next.js app
        run: npm run build
      
      # Confirm static export and output directory
      - name: Verify static export configuration
        id: export-check
        run: |
          echo "Checking Next.js configuration for static export..."
          if [ -f "next.config.js" ] || [ -f "next.config.mjs" ]; then
            echo "Next.js config file found"
            # Check if static export is configured
            if grep -q "output.*export" next.config.* 2>/dev/null; then
              echo "static-export=true" >> $GITHUB_OUTPUT
              echo "✅ Static export is configured"
            else
              echo "static-export=false" >> $GITHUB_OUTPUT
              echo "⚠️  Static export may not be configured"
            fi
          else
            echo "static-export=unknown" >> $GITHUB_OUTPUT
            echo "⚠️  No Next.js config file found"
          fi
          
          # Check output directory
          if [ -d "out" ]; then
            echo "output-dir=./out" >> $GITHUB_OUTPUT
            echo "✅ Output directory './out' exists"
            echo "Output directory contents:"
            ls -la ./out/ || true
          else
            echo "output-dir=./out" >> $GITHUB_OUTPUT
            echo "⚠️  Output directory './out' not found, but will be created by export"
          fi
      
      - name: Export static files
        run: npm run export
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out
  # Deployment job - depends on build
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
